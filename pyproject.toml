[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "hive"
version = "0.1.0"
description = "Claude Code Multi-Agent System - 複数のClaude Codeインスタンスを協調させるマルチエージェントシステム"
readme = "README.md"
requires-python = ">=3.12"
license = {text = "MIT"}
authors = [
    {name = "Hive Development Team"}
]
keywords = ["ai", "multi-agent", "claude", "automation", "tmux"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: MacOS",
    "Operating System :: POSIX :: Linux",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Topic :: System :: Distributed Computing",
]
dependencies = [
    "jsonschema>=4.19.0",
    "watchdog>=3.0.0",
    "python-dateutil>=2.8.2",
    "coloredlogs>=15.0.1",
    "requests>=2.31.0",
    "libtmux>=0.23.0",
    "python-dotenv>=1.0.0",
    "PyYAML>=6.0",
    # Web Dashboard dependencies
    "fastapi>=0.104.0",
    "uvicorn[standard]>=0.24.0",
    "websockets>=12.0",
    "pydantic>=2.5.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.4.0",
    "pytest-cov>=4.1.0",
    "pytest-mock>=3.11.1",
    "pytest-asyncio>=0.21.0",
    "ruff>=0.0.280",
    "mypy>=1.5.0",
    "types-python-dateutil>=2.8.19",
    "types-requests>=2.31.0",
    "types-PyYAML>=6.0.12",
]

[project.urls]
Homepage = "https://github.com/nyasuto/hive"
Repository = "https://github.com/nyasuto/hive.git"
Issues = "https://github.com/nyasuto/hive/issues"

# Legacy CLI entry point removed - use scripts/hive_cli.py directly
# [project.scripts]
# hive = "hive.cli:main"

[tool.setuptools.packages.find]
where = ["."]
include = ["scripts*", "workers*", "tools*", "web*", "config*", "templates*"]

[tool.ruff]
target-version = "py312"
line-length = 88

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = [
    "E501",  # line too long, handled by ruff format
    "B008",  # do not perform function calls in argument defaults
    "C901",  # too complex
]

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
"tests/**/*" = ["B011"]


[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
explicit_package_bases = true
namespace_packages = true
exclude = [
    "^tests/web/.*\\.py$",
    "^docs/.*\\.py$"
]

[[tool.mypy.overrides]]
module = [
    "libtmux.*",
    "coloredlogs.*",
    "watchdog.*",
    "pytest.*",
    "enhanced_feature_development",
]
ignore_missing_imports = true

# Legacy hive module overrides removed

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_decorators = false

[[tool.mypy.overrides]]
module = "examples.*"
ignore_errors = true

# Legacy agents module overrides removed

# Exploration phase: More lenient type checking
[[tool.mypy.overrides]]
module = [
    "*.poc.*",
    "*.experimental.*",
    "*.draft.*",
    "scripts.*",
    "scripts.create_github_*",
    "scripts.github_*",
    "scripts.test_*",
    "scripts.queen_*",
    "scripts.init_*",
    "hive.hive_directory.*",
]
ignore_errors = true

[tool.pytest.ini_options]
minversion = "7.0"
addopts = "-ra -q --strict-markers --strict-config"
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "unit: marks tests as unit tests",
    "asyncio: marks tests as asyncio tests",
]

[tool.coverage.run]
source = ["scripts", "workers", "tools", "web"]
omit = [
    "tests/*",
    "examples/*",
    "scripts/*",
    "*/migrations/*",
    "*/__pycache__/*",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

# Test files mypy configuration - relax type checking for tests
[[tool.mypy.overrides]]
module = [
    "tests.web.*"
]
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = false
disallow_untyped_decorators = false

[dependency-groups]
dev = [
    "coverage>=7.9.2",
    "pytest>=8.4.1",
    "pytest-asyncio>=1.0.0",
]
